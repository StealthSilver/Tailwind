CURRICULAM 

1. Basics of CSS
2. Basics of Tailwind
3. Responsive design funcdamentals
4. Theming and Variables
5. Arbritary Values
6. CSS properties
7. Animations with Tailwind CSS 
8. SVG animations 
9. Best Practices 
10. Recreating cool websites with tailwind and motion
11. Final Project
12. Inspirations 

-----------------------------------------------------------------------------------------

01 - BASICS OF CSS

replicating the landing page of finta with css
https://www.finta.com/

-----------------------------------------------------------------------------------------

02 - BASICS OF TAILWIND 

replicating the landing page of finta with tailwind
https://www.finta.com/

creating a next js application

1. npx create-next-app@latest
2. give name to the app 
3. ts , eslint, tailwind, src, app router, no turbopack, aliasa

create a lib/utils.ts and add

clsx
A small library that lets you combine class names conditionally.

Example:
clsx("p-4", false && "bg-red-500", true && "text-white");
// => "p-4 text-white"

tailwind-merge (twMerge)

Tailwind has conflicting utility classes (like p-2 vs p-4 or bg-red-500 vs bg-blue-500).
Normally, if you just concatenate them, all remain, and the browser applies the last one.
twMerge automatically resolves conflicts by keeping only the last valid class in each category.

Example:

twMerge("p-2 p-4"); 
// => "p-4"


The cn function
Combines both:
clsx handles conditional logic.
twMerge cleans up and resolves Tailwind conflicts.

Example usage:

cn(
  "p-2 bg-red-500",
  isActive && "bg-blue-500", 
  className
)


If isActive is true and className="mt-4", the result will be:

"p-2 bg-blue-500 mt-4"


(Notice how bg-red-500 got overridden by bg-blue-500).

-----------------------------------------------------------------------------------------

03 - THEMING 

1. install tailwind into the next js project 
2. install the tailwind intelliscence in the extentions
3. install the prettier automatic class sorting
- npm install -D prettier prettier-plugin-tailwindcss
- then create a prettierrc.json and save the code 


{
    "plugins": ["prettier-plugin-tailwindcss"]
}

why tailwind ? 
1. rapid prototyping : can test designs fast
2. utility based framework : created utility classes for base design

tailwind color palette is great

-----------------------------------------------------------------------------------------

04 - RESPONSIVE DESIGN 

by deault tailwind is mobile first, so all the properties without and breakpoint will be for smaller screen

crating a responsive navbar

-----------------------------------------------------------------------------------------

05 - DARK MODE DESIGN 

npx create-next-app@latest

npm i next-themes -> persists the theme of the user

-----------------------------------------------------------------------------------------

06 - CUSTOM STYLES AND GRIDS

